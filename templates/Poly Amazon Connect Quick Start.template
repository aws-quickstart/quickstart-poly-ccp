{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Poly for Amazon Connect Quick Start. AWS CloudFormation Template \"Poly Integrated Amazon Connect CCP.template\" which will deploy the Poly Amazon Connect CCP https web site to your AWS account. NOTE: For this template the AWS region must be US East (N. Virginia) - us-east-1. Please ensure you select this region before deploying, or deployment will fail.",

  "Parameters": {
    "AmazonConnectInstanceAlias": {
      "Type": "String",
      "Description": "The Amazon Connect Instance Alias e.g. myamazonconnect, is needed for the Poly Amazon Connect CCP to connect to your Amazon Connect instance. You can check the name of your instance alias in your AWS Amazon Connect settings.",
      "AllowedPattern": "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
      "ConstraintDescription": "must be your valid Amazon Connect Instance Alias, e.g. myamazonconnect"
    },
    "HostedZone": {
      "Type": "String",
      "Description": "The DNS name of an *existing* Amazon Route 53 hosted zone (domain name) in your AWS account with which you want to host your Poly-integrated Amazon Connect CCP, e.g. example.com",
      "AllowedPattern": "(?!-)[a-zA-Z0-9-.]{0,63}(?<!-)",
      "ConstraintDescription": "This parameter is optional but if provided must be a valid DNS zone name hosted within your AWS Console > Route 53."
    },
    "AmazonConnectDomainName": {
      "Type": "String",
      "Description": "A sub-domain for your hosted zone, e.g. amazonconnect.example.com - Will be used to create a CNAME (Alternate Name) in your hosted zone to reach your https Poly-integrated Amazon Connect CCP. Note: this CNAME should not exist already.",
      "AllowedPattern": "(?!-)[a-zA-Z0-9-.]{0,63}(?<!-)",
      "ConstraintDescription": "This parameter is optional but if provided must be a valid DNS sub-domain name which will be created under your hosted zone during deployment."
    }
  },

  "Conditions" : {
	"NoHostedZoneCondition" : { 
		"Fn::Equals" : [
			{"Ref" : "HostedZone"}, ""
		]
	},
    "NoDomainNameInfoCondition" : {
		"Fn::Or" : [
			{
				"Fn::Equals" : [
					{"Ref" : "AmazonConnectDomainName"}, ""
				]
			},
			{"Condition" : "NoHostedZoneCondition"}
		]
	},
	"HasHostedZoneCondition" : {
		"Fn::Not" : [{
			"Condition" : "NoHostedZoneCondition"
		}]
	},
	"HasDomainNameInfoCondition" : {
		"Fn::And" : [
			{
				"Fn::Not" : [{
					"Fn::Equals" : [
						{"Ref" : "AmazonConnectDomainName"}, ""
					]
				}]
			},
			{"Condition" : "HasHostedZoneCondition"}
		]
	}
  },  

  "Rules": {
    "RegionSupport": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Equals": [
              {
                "Ref": "AWS::Region"
              },
              "us-east-1"
            ]
          },
          "AssertDescription": "Region must be US East (N. Virginia) - us-east-1"
        }
      ]
    }
  },

  "Resources": {

    "S3BucketForWebsiteContent": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "error.html"
        }
      }
    },

    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "MyPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadForGetBucketObjects",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3BucketForWebsiteContent"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "Bucket": {
          "Ref": "S3BucketForWebsiteContent"
        }
      }
    },

    "AmazonConnectDeploymentFunctionExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "lambda.amazonaws.com"
              ]
            },
            "Action": [
              "sts:AssumeRole"
            ]
          }
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        ]
      }
    },

    "AmazonConnectDeploymentFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "deploy.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": "AmazonConnectDeploymentFunctionExecutionRole.Arn"
        },
        "Environment": {
          "Variables": {
            "BUCKET_NAME": {
              "Fn::GetAtt": [
                "S3BucketForWebsiteContent",
                "DomainName"
              ]
            },
            "AMAZON_CONNECT_INSTANCE_ALIAS": {
              "Ref": "AmazonConnectInstanceAlias"
            }
          }
        },
        "Runtime": "python3.7",
        "Timeout": 60,
        "Code": {
          "S3Bucket": "amazonconnectcloudformationassets",
          "S3Key": "deploy.zip"
        }
      }
    },

    "AmazonConnectDeploymentFunctionCustomAction": {
      "Type": "Custom::AmazonConnectDeploymentFunctionCustomAction",
      "Version": "1.0",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": "AmazonConnectDeploymentFunction.Arn"
        },
        "BUCKET_NAME": {
          "Fn::GetAtt": [
            "S3BucketForWebsiteContent",
            "DomainName"
          ]
        },
        "AMAZON_CONNECT_INSTANCE_ALIAS": {
          "Ref": "AmazonConnectInstanceAlias"
        }
		}
    },
	
    "CertificateForCDN": {
      "Type": "AWS::CertificateManager::Certificate",
	  "Condition": "HasDomainNameInfoCondition",
      "Properties": {
        "DomainName": { "Ref": "AmazonConnectDomainName" },
        "DomainValidationOptions": [
          {

            "DomainName": { "Ref": "AmazonConnectDomainName" },
            "ValidationDomain": { "Ref": "HostedZone" }
          }
        ],
        "ValidationMethod": "DNS"
      }
    },

	"WebsiteCDNNoDomain": {
      "Type": "AWS::CloudFront::Distribution",
	  "Condition": "NoDomainNameInfoCondition",
      "Properties": {
        "DistributionConfig": {
          "Comment": "CDN for S3-backed website",          
          "Enabled": "true",
          "DefaultCacheBehavior": {
            "ForwardedValues": { "QueryString": "true" },
            "TargetOriginId": "only-origin",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Origins": [
            {
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "HTTPSPort": "443",
                "OriginProtocolPolicy": "http-only"
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "S3BucketForWebsiteContent",
                  "DomainName"
                ]
              },
              "Id": "only-origin"
            }
          ],
          "PriceClass": "PriceClass_100"
        }
      }
    },

    "WebsiteCDNWithDomain": {
      "Type": "AWS::CloudFront::Distribution",
	  "Condition": "HasDomainNameInfoCondition",
      "Properties": {
        "DistributionConfig": {
          "Comment": "CDN for S3-backed website",
          "Aliases": [
            {
              "Fn::Join": [
                "",
                [
                  { "Ref": "AmazonConnectDomainName" }
                ]
              ]
            }
          ],
          "Enabled": "true",
          "DefaultCacheBehavior": {
            "ForwardedValues": { "QueryString": "true" },
            "TargetOriginId": "only-origin",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Origins": [
            {
              "CustomOriginConfig": {
                "HTTPPort": "80",
                "HTTPSPort": "443",
                "OriginProtocolPolicy": "http-only"
              },
              "DomainName": {
                "Fn::GetAtt": [
                  "S3BucketForWebsiteContent",
                  "DomainName"
                ]
              },
              "Id": "only-origin"
            }
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": { "Ref": "CertificateForCDN" },
            "SslSupportMethod": "sni-only"
          },
          "PriceClass": "PriceClass_100"
        }
      }
    },

    "WebsiteDNSName": {
      "Type": "AWS::Route53::RecordSet",
	  "Condition": "HasDomainNameInfoCondition",
      "Properties": {
        "HostedZoneName": {
          "Fn::Join": [
            "",
            [
              { "Ref": "HostedZone" },
              "."
            ]
          ]
        },
        "Comment": "CNAME redirect custom name to CloudFront distribution",
        "Name": {
          "Fn::Join": [
            "",
            [
              { "Ref": "AmazonConnectDomainName" }
            ]
          ]
        },
        "Type": "CNAME",
        "TTL": "300",
        "ResourceRecords": [
          { "Fn::GetAtt": [ "WebsiteCDNWithDomain", "DomainName" ] }
        ]
      }
    }
  },

  "Outputs": {
    "WebsiteURL": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { "Ref": "AmazonConnectDomainName" }
          ]
        ]
      },
      "Description": "The deployed web site url. You must add this to the Approved Origins in your Amazon Connect Instance > Application Integration > Click +Add origin",
	  "Condition": "HasDomainNameInfoCondition"
    },
    "WebsiteURLCloudFront": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            { "Fn::GetAtt": [ "WebsiteCDNNoDomain", "DomainName" ] }
          ]
        ]
      },
      "Description": "The deployed web site url. You must add this to the Approved Origins in your Amazon Connect Instance > Application Integration > Click +Add origin",
	  "Condition": "NoDomainNameInfoCondition"
    },
	"NumberOfFilesDeployed": {
		"Value": {
			"Fn::GetAtt": [
				"AmazonConnectDeploymentFunctionCustomAction",
				"NumberOfFilesDeployed"
			]
		}
	}
  }
}
